@use "../01_settings" as settings;

.fm-o-layout {
  .fm-c-folder-card {
    padding: settings.$space-8 settings.$space-16 settings.$space-8 settings.$space-8;
    background-color: var(--fm-card-bg);
    border-radius: var(--fm-radius-sm);
    position: relative;
    transition: background-color var(--fm-transition-in-out);
    display: grid;
    grid-template-areas:
    "img name action"
    "img info action";
    grid-gap: 0 settings.$space-16;
    grid-template-columns: 56px 1fr 24px;

    &:hover {
      background-color: var(--fm-card-hover-bg);
    }
  }


  .fm-c-folder-card__link {
    //display: none;
    opacity: 0;
    position: absolute;
    inset: 0;
  }

  .fm-c-folder-card__infos {
    display: flex;
    align-items: center;
    gap: settings.$space-16;
  }

  .fm-c-folder-card__icon {
    padding: settings.$space-12;
    background-color: var(--fm-card-icon-bg);
    border-radius: var(--fm-radius-lg);
    grid-area: img;
  }

  .fm-c-folder-card__name {
    grid-area: name;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    align-self: end;
  }

  .fm-c-folder-card__number {
    grid-area: info;
  }

  .fm-c-folder-card__action {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: end;
    grid-area: action;
    transition: opacity var(--fm-transition-in-out);
  }

  .fm-c-folder-card__loading {
    display: flex;
    flex-direction: column;
    gap: settings.$space-16;

    @include settings.max-width(md) {
      padding-top: 0;
      gap: settings.$space-12;
    }
  }

  .fm-c-folder-card__bar-loader {
    height: 72px;
    background: var(--fm-loading-grey);
    overflow: hidden;
    border-radius: var(--fm-radius-sm);
  }

  .fm-c-folder-card__bar-loader::before {
    content: "";
    display: block;
    height: 100%;
    width: 100%;
    animation: loading 1s infinite;
    background: linear-gradient(to right, transparent, var(--fm-loading-grey-light), transparent);
  }
}

@keyframes loading {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}
